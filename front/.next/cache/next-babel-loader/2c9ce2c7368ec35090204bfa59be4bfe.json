{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  mainPosts: [{\n    User: {\n      id: 1,\n      nickname: \"전세환\"\n    },\n    content: \"첫 번째 게시글\",\n    img: \"https://m.post.naver.com/viewer/postView.nhn?volumeNo=27220260&memberNo=3613482#\"\n  }],\n  imagePaths: []\n};\nvar ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nvar ADD_POST_SUCCESS = \"ADD_POST\";\nvar ADD_POST = \"ADD_POST\";\nvar addPost = {\n  type: ADD_POST\n};\nvar addDummy = {\n  type: ADD_DUMMY,\n  data: {\n    content: \"Hello\",\n    UserId: 1,\n    User: {\n      nickname: \"제로초\"\n    }\n  }\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case ADD_DUMMY:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          mainPosts: [action.data].concat(_toConsumableArray(state.mainPosts))\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/arthu/Documents/react-nodebird/front/reducers/post.js"],"names":["initialState","mainPosts","User","id","nickname","content","img","imagePaths","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST","addPost","type","addDummy","ADD_DUMMY","data","UserId","reducer","state","action"],"mappings":";;;;;;;AAAA,OAAO,IAAMA,YAAY,GAAG;AAC1BC,EAAAA,SAAS,EAAE,CACT;AACEC,IAAAA,IAAI,EAAE;AACJC,MAAAA,EAAE,EAAE,CADA;AAEJC,MAAAA,QAAQ,EAAE;AAFN,KADR;AAKEC,IAAAA,OAAO,EAAE,UALX;AAMEC,IAAAA,GAAG,EACD;AAPJ,GADS,CADe;AAY1BC,EAAAA,UAAU,EAAE;AAZc,CAArB;AAeP,IAAMC,gBAAgB,GAAG,kBAAzB;AACA,IAAMC,gBAAgB,GAAG,UAAzB;AACA,IAAMC,QAAQ,GAAG,UAAjB;AAGA,IAAMC,OAAO,GAAG;AACdC,EAAAA,IAAI,EAAEF;AADQ,CAAhB;AAIA,IAAMG,QAAQ,GAAG;AACfD,EAAAA,IAAI,EAAEE,SADS;AAEfC,EAAAA,IAAI,EAAE;AACJV,IAAAA,OAAO,EAAE,OADL;AAEJW,IAAAA,MAAM,EAAE,CAFJ;AAGJd,IAAAA,IAAI,EAAE;AACJE,MAAAA,QAAQ,EAAE;AADN;AAHF;AAFS,CAAjB;;AAWA,IAAMa,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBlB,YAAyB;AAAA,MAAXmB,MAAW;;AAChD,UAAQA,MAAM,CAACP,IAAf;AACE,SAAKF,QAAL;AAAe;AACb,iCACKQ,KADL;AAGD;;AACD,SAAKJ,SAAL;AAAgB;AACd,+CACKI,KADL;AAEEjB,UAAAA,SAAS,GAAGkB,MAAM,CAACJ,IAAV,4BAAmBG,KAAK,CAACjB,SAAzB;AAFX;AAID;;AACD;AAAS;AACP,iCACKiB,KADL;AAGD;AAhBH;AAkBD,CAnBD;;AAqBA,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n  mainPosts: [\r\n    {\r\n      User: {\r\n        id: 1,\r\n        nickname: \"전세환\",\r\n      },\r\n      content: \"첫 번째 게시글\",\r\n      img:\r\n        \"https://m.post.naver.com/viewer/postView.nhn?volumeNo=27220260&memberNo=3613482#\",\r\n    },\r\n  ],\r\n  imagePaths: [],\r\n};\r\n\r\nconst ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\r\nconst ADD_POST_SUCCESS = \"ADD_POST\";\r\nconst ADD_POST = \"ADD_POST\";\r\n\r\n\r\nconst addPost = {\r\n  type: ADD_POST,\r\n};\r\n\r\nconst addDummy = {\r\n  type: ADD_DUMMY,\r\n  data: {\r\n    content: \"Hello\",\r\n    UserId: 1,\r\n    User: {\r\n      nickname: \"제로초\",\r\n    },\r\n  },\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case ADD_DUMMY: {\r\n      return {\r\n        ...state,\r\n        mainPosts: [action.data, ...state.mainPosts],\r\n      };\r\n    }\r\n    default: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}