{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\arthu\\\\Documents\\\\react-nodebird\\\\front\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n// 타임라인 역할 페이지\nimport React, { useEffect } from \"react\";\nimport PostForm from \"../components/PostForm\";\nimport PostCard from \"../components/PostCard\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { SIGN_UP_REQUEST } from \"../reducers/user\"; // import { loginAction, logoutAction } from \"../reducers/user\";\n// 추후 리덕스 file에 편입\n// const dummy = {\n//   isLoggedIn: true,\n//   imagePaths: [],\n//   mainPosts: [\n//     {\n//       User: {\n//         id: 1,\n//         nickname: \"전세환\",\n//       },\n//       content: \"첫 번째 게시글\",\n//       img:\n//         \"https://m.post.naver.com/viewer/postView.nhn?volumeNo=27220260&memberNo=3613482#\",\n//     },\n//   ],\n// };\n\nvar Home = function Home() {\n  _s();\n\n  // const dispatch = useDispatch();\n  // 처음 state는 전체state(reducers/index.js의 user)\n  // 성능 최적화를 위해 잘게 쪼개서 useSelector 함\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      isLoggedIn = _useSelector.isLoggedIn; // const user = useSelector(state => state.user.user);\n  // const isLoggedIn = useSelector(state => state.user.isLoggedIn);\n\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts; // console.log(user);\n  // useEffect(() => {\n  //   dispatch(loginAction);\n  //   dispatch(logoutAction);\n  //   dispatch(loginAction);\n  // }, []);\n\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch({\n      type: \"LOAD_MAIN_POSTS_REQUEST\"\n    });\n  }, []);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, isLoggedIn && __jsx(PostForm, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 22\n    }\n  }), mainPosts.map(function (c) {\n    return __jsx(PostCard, {\n      key: c,\n      post: c,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 16\n      }\n    });\n  }));\n};\n\n_s(Home, \"2zlmdpOpa3jBgOqctxOxkmZXAcI=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/arthu/Documents/react-nodebird/front/pages/index.js"],"names":["React","useEffect","PostForm","PostCard","useSelector","useDispatch","SIGN_UP_REQUEST","Home","state","user","isLoggedIn","post","mainPosts","dispatch","type","map","c"],"mappings":";;;;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,eAAT,QAAgC,kBAAhC,C,CACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACjB;AACA;AACA;AAHiB,qBAIMH,WAAW,CAAC,UAAAI,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CAJjB;AAAA,MAITC,UAJS,gBAITA,UAJS,EAKjB;AACA;;;AANiB,sBAOKN,WAAW,CAAC,UAAAI,KAAK;AAAA,WAAIA,KAAK,CAACG,IAAV;AAAA,GAAN,CAPhB;AAAA,MAOTC,SAPS,iBAOTA,SAPS,EAQjB;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACAJ,EAAAA,SAAS,CAAC,YAAM;AACdY,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAGD,GAJQ,EAIN,EAJM,CAAT;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGJ,UAAU,IAAI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANjB,EAQGE,SAAS,CAACG,GAAV,CAAc,UAAAC,CAAC,EAAI;AAClB,WAAO,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,CAAf;AAAkB,MAAA,IAAI,EAAEA,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFA,CARH,CADF;AAcD,CAlCD;;GAAMT,I;UAImBH,W,EAGDA,W,EAOLC,W;;;KAdbE,I;AAoCN,eAAeA,IAAf","sourcesContent":["// 타임라인 역할 페이지\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport PostForm from \"../components/PostForm\";\r\nimport PostCard from \"../components/PostCard\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { SIGN_UP_REQUEST } from \"../reducers/user\";\r\n// import { loginAction, logoutAction } from \"../reducers/user\";\r\n\r\n// 추후 리덕스 file에 편입\r\n// const dummy = {\r\n//   isLoggedIn: true,\r\n//   imagePaths: [],\r\n//   mainPosts: [\r\n//     {\r\n//       User: {\r\n//         id: 1,\r\n//         nickname: \"전세환\",\r\n//       },\r\n//       content: \"첫 번째 게시글\",\r\n//       img:\r\n//         \"https://m.post.naver.com/viewer/postView.nhn?volumeNo=27220260&memberNo=3613482#\",\r\n//     },\r\n//   ],\r\n// };\r\n\r\nconst Home = () => {\r\n  // const dispatch = useDispatch();\r\n  // 처음 state는 전체state(reducers/index.js의 user)\r\n  // 성능 최적화를 위해 잘게 쪼개서 useSelector 함\r\n  const { isLoggedIn } = useSelector(state => state.user);\r\n  // const user = useSelector(state => state.user.user);\r\n  // const isLoggedIn = useSelector(state => state.user.isLoggedIn);\r\n  const { mainPosts } = useSelector(state => state.post);\r\n  // console.log(user);\r\n  // useEffect(() => {\r\n  //   dispatch(loginAction);\r\n  //   dispatch(logoutAction);\r\n  //   dispatch(loginAction);\r\n  // }, []);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: \"LOAD_MAIN_POSTS_REQUEST\",\r\n    });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {/* {user ? (\r\n        <div>로그인 했습니다: {user.nickname}</div>\r\n      ) : (\r\n        <div>로그아웃 했습니다.</div>\r\n      )} */}\r\n      {isLoggedIn && <PostForm />}\r\n      {/* 게시글 나오는 공간 */}\r\n      {mainPosts.map(c => {\r\n        return <PostCard key={c} post={c} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}