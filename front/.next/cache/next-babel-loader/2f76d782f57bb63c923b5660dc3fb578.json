{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arthu\\\\Documents\\\\react-nodebird\\\\front\\\\pages\\\\signup.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback, memo } from \"react\";\nimport { Form, Input, Checkbox, Button } from \"antd\"; // custom hooks\n// export 해놓으면 다른 컴포넌트(파일)에서도 쓸 수가 있음(AppLayout.js)\n\nexport const useInput = (initValue = null) => {\n  const {\n    0: value,\n    1: setter\n  } = useState(initValue);\n  const handler = useCallback(e => {\n    setter(e.target.value);\n  }, []);\n  return [value, handler];\n};\n\nconst Signup = () => {\n  // const [id, setId] = useState(\"\");\n  // const [nickName, setNickname] = useState(\"\");\n  // const [password, setPassword] = useState(\"\");\n  const [id, onChangeId] = useInput(\"\");\n  const [nickname, onChangeNickname] = useInput(\"\");\n  const {\n    0: term,\n    1: setTerm\n  } = useState(false);\n  const [password, onChangePassword] = useInput(\"\");\n  const {\n    0: passwordCheck,\n    1: setPasswordCheck\n  } = useState(\"\");\n  const {\n    0: passwordError,\n    1: setPasswordError\n  } = useState(false);\n  const {\n    0: termError,\n    1: setTermError\n  } = useState(false); // event listener\n\n  const onSubmit = useCallback(e => {\n    e.preventDefault(); //폼 작성 상황에 따른 에러처리(검증 로직)\n\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n\n    if (!term) {\n      return setTermError(true);\n    }\n\n    console.log({\n      id,\n      nickname,\n      password,\n      passwordCheck,\n      term\n    });\n  }, [password, passwordCheck, term]); // const onChangeId = e => {          << custom hook으로 줄인 내용\n  //   setId(e.target.value);\n  // };\n  // const onChangeNickname = e => {\n  //   setNickname(e.target.value);\n  // };\n  // const onChangePassword = e => {\n  //   setPassword(e.target.value);\n  // };\n\n  const onChangePasswordCheck = useCallback(e => {\n    setPasswordError(e.target.value !== password);\n    setPasswordCheck(e.target.value);\n  }, [password]);\n  const onChangeTerm = useCallback(e => {\n    setTermError(false);\n    setTerm(e.target.checked);\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Form, {\n    onSubmit: onSubmit,\n    style: {\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }), __jsx(Input, {\n    name: \"user-id\",\n    value: id,\n    required: true,\n    onChange: onChangeId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-nick\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"\\uB2C9\\uB124\\uC784\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }), __jsx(Input, {\n    name: \"user-nick\",\n    value: nickname,\n    required: true,\n    onChange: onChangeNickname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }), __jsx(Input, {\n    name: \"user-password\",\n    type: \"password\",\n    value: password,\n    required: true,\n    onChange: onChangePassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password-check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uCCB4\\uD06C\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }), __jsx(Input, {\n    name: \"user-password-check\",\n    value: passwordCheck,\n    type: \"password\",\n    required: true,\n    onChange: onChangePasswordCheck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }), passwordError && __jsx(\"div\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, __jsx(Checkbox, {\n    name: \"user-term\",\n    vale: term,\n    onChange: onChangeTerm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, \"\\uC774\\uC6A9\\uC57D\\uAD00 \\uB0B4\\uC6A9\\uC5D0 \\uB3D9\\uC758\\uD569\\uB2C8\\uB2E4.\"), \"\\uC57D\\uAD00\", termError && __jsx(\"div\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD558\\uC154\\uC57C \\uD569\\uB2C8\\uB2E4.\")), __jsx(\"div\", {\n    style: {\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, \"\\uAC00\\uC785\\uD558\\uAE30\")), \"\\uD68C\\uC6D0\\uAC00\\uC785\"));\n};\n\nexport default Signup;","map":{"version":3,"sources":["C:/Users/arthu/Documents/react-nodebird/front/pages/signup.js"],"names":["React","useState","useCallback","memo","Form","Input","Checkbox","Button","useInput","initValue","value","setter","handler","e","target","Signup","id","onChangeId","nickname","onChangeNickname","term","setTerm","password","onChangePassword","passwordCheck","setPasswordCheck","passwordError","setPasswordError","termError","setTermError","onSubmit","preventDefault","console","log","onChangePasswordCheck","onChangeTerm","checked","padding","color","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, memo } from \"react\";\r\nimport { Form, Input, Checkbox, Button } from \"antd\";\r\n\r\n// custom hooks\r\n// export 해놓으면 다른 컴포넌트(파일)에서도 쓸 수가 있음(AppLayout.js)\r\nexport const useInput = (initValue = null) => {\r\n  const [value, setter] = useState(initValue);\r\n  const handler = useCallback(e => {\r\n    setter(e.target.value);\r\n  }, []);\r\n  return [value, handler];\r\n};\r\n\r\nconst Signup = () => {\r\n  // const [id, setId] = useState(\"\");\r\n  // const [nickName, setNickname] = useState(\"\");\r\n  // const [password, setPassword] = useState(\"\");\r\n  const [id, onChangeId] = useInput(\"\");\r\n  const [nickname, onChangeNickname] = useInput(\"\");\r\n  const [term, setTerm] = useState(false);\r\n  const [password, onChangePassword] = useInput(\"\");\r\n  const [passwordCheck, setPasswordCheck] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  const [termError, setTermError] = useState(false);\r\n\r\n  // event listener\r\n\r\n  const onSubmit = useCallback(\r\n    e => {\r\n      e.preventDefault();\r\n\r\n      //폼 작성 상황에 따른 에러처리(검증 로직)\r\n\r\n      if (password !== passwordCheck) {\r\n        return setPasswordError(true);\r\n      }\r\n      if (!term) {\r\n        return setTermError(true);\r\n      }\r\n      console.log({ id, nickname, password, passwordCheck, term });\r\n    },\r\n    [password, passwordCheck, term]\r\n  );\r\n  // const onChangeId = e => {          << custom hook으로 줄인 내용\r\n  //   setId(e.target.value);\r\n  // };\r\n  // const onChangeNickname = e => {\r\n  //   setNickname(e.target.value);\r\n  // };\r\n  // const onChangePassword = e => {\r\n  //   setPassword(e.target.value);\r\n  // };\r\n\r\n  const onChangePasswordCheck = useCallback(\r\n    e => {\r\n      setPasswordError(e.target.value !== password);\r\n      setPasswordCheck(e.target.value);\r\n    },\r\n    [password]\r\n  );\r\n\r\n  const onChangeTerm = useCallback(e => {\r\n    setTermError(false);\r\n    setTerm(e.target.checked);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {/* style={{}} 추후 css 별도적용 필요 */}\r\n      <Form onSubmit={onSubmit} style={{ padding: 10 }}>\r\n        <div>\r\n          <label htmlFor=\"user-id\">아이디</label>\r\n          <br />\r\n          {/* 앞에 required는 필수값 입력 */}\r\n          <Input name=\"user-id\" value={id} required onChange={onChangeId} />\r\n          {/* 인풋 -> value, onChange 짝이 되어야 함 */}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"user-nick\">닉네임</label>\r\n          <br />\r\n          <Input\r\n            name=\"user-nick\"\r\n            value={nickname}\r\n            required\r\n            onChange={onChangeNickname}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"user-password\">비밀번호</label>\r\n          <br />\r\n          <Input\r\n            name=\"user-password\"\r\n            type=\"password\"\r\n            value={password}\r\n            required\r\n            onChange={onChangePassword}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"user-password-check\">비밀번호체크</label>\r\n          <br />\r\n          <Input\r\n            name=\"user-password-check\"\r\n            value={passwordCheck}\r\n            type=\"password\"\r\n            required\r\n            onChange={onChangePasswordCheck}\r\n          />\r\n          {passwordError && (\r\n            <div style={{ color: \"red\" }}>비밀번호가 일치하지 않습니다.</div>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <Checkbox name=\"user-term\" vale={term} onChange={onChangeTerm}>\r\n            이용약관 내용에 동의합니다.\r\n          </Checkbox>\r\n          약관\r\n          {termError && (\r\n            <div style={{ color: \"red\" }}>약관에 동의하셔야 합니다.</div>\r\n          )}\r\n        </div>\r\n        <div style={{ marginTop: 10 }}>\r\n          {/* 원래 button type=\"submit\" antd의 특성 */}\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            가입하기\r\n          </Button>\r\n        </div>\r\n        회원가입\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n"]},"metadata":{},"sourceType":"module"}