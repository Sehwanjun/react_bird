{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\arthu\\\\Documents\\\\react-nodebird\\\\front\\\\components\\\\AppLayout.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Link from \"next/link\";\nimport { Menu, Input, Button, Row, Col, Card, Avatar, Form } from \"antd\";\nimport PropTypes from \"prop-types\";\nimport Password from \"antd/lib/input/Password\";\nimport LoginForm from \"./LoginForm\";\nimport UserProfile from \"./UserProfile\";\nimport { useSelector } from \"react-redux\"; // 아직 서버쪽에서 불러오는 데이터가 없어서 dummy에다가 가짜데이터를 만들어 주는 것\n// const dummy = {\n//   nickname: \"제로초\",\n//   Post: [],\n//   Followings: [],\n//   Followers: [],\n//   isLoggedIn: false,\n// };\n\nvar AppLayout = function AppLayout(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      isLoggedIn = _useSelector.isLoggedIn;\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, __jsx(Menu, {\n    mode: \"horizontal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, __jsx(Menu.Item, {\n    key: \"home\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \"\\uB178\\uB4DC\\uBC84\\uB4DC\"))), __jsx(Menu.Item, {\n    key: \"profile\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: \"/profile\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"\\uD504\\uB85C\\uD544\"))), __jsx(Menu.Item, {\n    key: \"mail\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, __jsx(Input.Search, {\n    enterButton: true,\n    style: {\n      verticalAlign: \"middle\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }))), __jsx(Row, {\n    gutter: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    xs: 24,\n    md: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, isLoggedIn ? __jsx(UserProfile, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }) : __jsx(LoginForm, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 43\n    }\n  })), __jsx(Col, {\n    xs: 24,\n    md: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, children), __jsx(Col, {\n    xs: 24,\n    md: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    href: \"https://www.facebook.com\",\n    target: \"_blank\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"Mady by Sehwan\"))));\n};\n\n_s(AppLayout, \"dUXwst2Eg0W9j0q+gQRFZDoRJuM=\", false, function () {\n  return [useSelector];\n});\n\n_c = AppLayout;\nAppLayout.propTypes = {\n  children: PropTypes.elementType\n};\nexport default AppLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppLayout\");","map":{"version":3,"sources":["C:/Users/arthu/Documents/react-nodebird/front/components/AppLayout.js"],"names":["React","Link","Menu","Input","Button","Row","Col","Card","Avatar","Form","PropTypes","Password","LoginForm","UserProfile","useSelector","AppLayout","children","state","user","isLoggedIn","verticalAlign","propTypes","elementType"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Link from \"next/link\";\r\nimport { Menu, Input, Button, Row, Col, Card, Avatar, Form } from \"antd\";\r\nimport PropTypes from \"prop-types\";\r\nimport Password from \"antd/lib/input/Password\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport UserProfile from \"./UserProfile\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n// 아직 서버쪽에서 불러오는 데이터가 없어서 dummy에다가 가짜데이터를 만들어 주는 것\r\n// const dummy = {\r\n//   nickname: \"제로초\",\r\n//   Post: [],\r\n//   Followings: [],\r\n//   Followers: [],\r\n//   isLoggedIn: false,\r\n// };\r\n\r\nconst AppLayout = ({ children }) => {\r\n  const {isLoggedIn} = useSelector(state=>state.user)\r\n  return (\r\n    <div>\r\n      {/* 상단 메뉴 antd 적용 */}\r\n      <Menu mode=\"horizontal\">\r\n        <Menu.Item key=\"home\">\r\n          <Link href=\"/\">\r\n            <a>노드버드</a>\r\n          </Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"profile\">\r\n          <Link href=\"/profile\">\r\n            <a>프로필</a>\r\n          </Link>\r\n        </Menu.Item>\r\n\r\n        {/* 검색창 */}\r\n        <Menu.Item key=\"mail\">\r\n          <Input.Search enterButton style={{ verticalAlign: \"middle\" }} />\r\n        </Menu.Item>\r\n      </Menu>\r\n\r\n      {/* xs는 제일 작은화면, md는 데스크탑, 전체는 24이다 */}\r\n      {/* 자동으로 반응형이 된다 */}\r\n\r\n      {/* antd > grid system */}\r\n      {/* 전체가 24, 그 후에 배분 */}\r\n      <Row gutter={8}>\r\n        {/* 로그인 창 */}\r\n        <Col xs={24} md={6}>\r\n          {/* 일단 로그인 했을때와 안했을때의 모습 둘다 만들어 놓은 다음에 if문 */}\r\n          {isLoggedIn ? <UserProfile /> : <LoginForm />}\r\n        </Col>\r\n        <Col xs={24} md={12}>\r\n          {children}\r\n        </Col>\r\n        <Col xs={24} md={6}>\r\n          {/* 외부경로는 Link 태그를 사용할 수 없음 <Link href=\"https://www.facebook.com\"> */}\r\n          <a href=\"https://www.facebook.com\" target=\"_blank\">\r\n            Mady by Sehwan\r\n          </a>\r\n          {/* </Link> */}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nAppLayout.propTypes = {\r\n  children: PropTypes.elementType,\r\n};\r\n\r\nexport default AppLayout;\r\n"]},"metadata":{},"sourceType":"module"}