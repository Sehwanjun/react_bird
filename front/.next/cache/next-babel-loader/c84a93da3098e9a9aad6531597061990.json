{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\arthu\\\\Documents\\\\react-nodebird\\\\front\\\\pages\\\\signup.js\",\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from \"react\";\nimport { Form, Input, Checkbox, Button } from \"antd\";\n\nvar TextInput = function TextInput() {\n  return __jsx(Input, {\n    name: \"user-id\",\n    value: id,\n    required: true,\n    onChange: onChangeId,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 10\n    }\n  });\n};\n\n_c = TextInput;\n\nvar Signup = function Signup() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  // const [id, setId] = useState(\"\");\n  // const [nickName, setNickname] = useState(\"\");\n  // const [password, setPassword] = useState(\"\");\n  var _useState = useState(\"\"),\n      passwordCheck = _useState[0],\n      setPasswordCheck = _useState[1];\n\n  var _useState2 = useState(false),\n      term = _useState2[0],\n      setTerm = _useState2[1];\n\n  var _useState3 = useState(false),\n      passwordError = _useState3[0],\n      setPasswordError = _useState3[1];\n\n  var _useState4 = useState(false),\n      termError = _useState4[0],\n      setTermError = _useState4[1]; // custom hooks\n\n\n  var useInput = function useInput() {\n    _s();\n\n    var initValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n    var _useState5 = useState(initValue),\n        value = _useState5[0],\n        setter = _useState5[1];\n\n    var handler = useCallback(function (e) {\n      setter(e.target.value);\n    }, []);\n    return [value, handler];\n  };\n\n  _s(useInput, \"jJC7NbJZBwPw2rLfrH4q62FtgpU=\");\n\n  var _useInput = useInput(\"\"),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      id = _useInput2[0],\n      onChangeId = _useInput2[1];\n\n  var _useInput3 = useInput(\"\"),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      nickname = _useInput4[0],\n      onChangeNickname = _useInput4[1];\n\n  var _useInput5 = useInput(\"\"),\n      _useInput6 = _slicedToArray(_useInput5, 2),\n      password = _useInput6[0],\n      onChangePassword = _useInput6[1];\n\n  var onSubmit = useCallback(function (e) {\n    e.preventDefault();\n\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n\n    if (!term) {\n      return setTermError(true);\n    }\n\n    console.log({\n      id: id,\n      nickname: nickname,\n      password: password,\n      passwordCheck: passwordCheck,\n      term: term\n    });\n  }, [password, passwordCheck, term]); // const onChangeId = e => {          << custom hook으로 줄인 내용\n  //   setId(e.target.value);\n  // };\n  // const onChangeNickname = e => {\n  //   setNickname(e.target.value);\n  // };\n  // const onChangePassword = e => {\n  //   setPassword(e.target.value);\n  // };\n\n  var onChangePasswordCheck = useCallback(function (e) {\n    setPasswordError(e.target.value !== password);\n    setPasswordCheck(e.target.value);\n  }, [password]);\n  var onChangeTerm = useCallback(function (e) {\n    setTermError(false);\n    setTerm(e.target.checked);\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Form, {\n    onSubmit: onSubmit,\n    style: {\n      padding: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-id\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-nick\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"\\uB2C9\\uB124\\uC784\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }), __jsx(Input, {\n    name: \"user-nick\",\n    value: nickname,\n    required: true,\n    onChange: onChangeNickname,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }), __jsx(Input, {\n    name: \"user-password\",\n    type: \"password\",\n    value: password,\n    required: true,\n    onChange: onChangePassword,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password-check\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uCCB4\\uD06C\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }), __jsx(Input, {\n    name: \"user-password-check\",\n    value: passwordCheck,\n    type: \"password\",\n    required: true,\n    onChange: onChangePasswordCheck,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }), passwordError && __jsx(\"div\", {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\")), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, __jsx(Checkbox, {\n    name: \"user-term\",\n    vale: term,\n    onChange: onChangeTerm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, \"\\uC774\\uC6A9\\uC57D\\uAD00 \\uB0B4\\uC6A9\\uC5D0 \\uB3D9\\uC758\\uD569\\uB2C8\\uB2E4.\"), termError && __jsx(\"div\", {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD558\\uC154\\uC57C \\uD569\\uB2C8\\uB2E4.\")), __jsx(\"div\", {\n    style: {\n      marginTop: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, \"\\uAC00\\uC785\\uD558\\uAE30\")), \"\\uD68C\\uC6D0\\uAC00\\uC785\"));\n};\n\n_s2(Signup, \"YmM27ACwtQzQRxWPY9jQu+aenhc=\", true);\n\n_c2 = Signup;\nexport default Signup;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TextInput\");\n$RefreshReg$(_c2, \"Signup\");","map":{"version":3,"sources":["C:/Users/arthu/Documents/react-nodebird/front/pages/signup.js"],"names":["React","useState","useCallback","Form","Input","Checkbox","Button","TextInput","id","onChangeId","Signup","passwordCheck","setPasswordCheck","term","setTerm","passwordError","setPasswordError","termError","setTermError","useInput","initValue","value","setter","handler","e","target","nickname","onChangeNickname","password","onChangePassword","onSubmit","preventDefault","console","log","onChangePasswordCheck","onChangeTerm","checked","padding","color","marginTop"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,QAAtB,EAAgCC,MAAhC,QAA8C,MAA9C;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAK;AACrB,SAAO,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,SAAZ;AAAsB,IAAA,KAAK,EAAEC,EAA7B;AAAiC,IAAA,QAAQ,MAAzC;AAA0C,IAAA,QAAQ,EAAEC,UAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAFD;;KAAMF,S;;AAIN,IAAMG,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA;;AAAA;;AACnB;AACA;AACA;AAHmB,kBAIuBT,QAAQ,CAAC,EAAD,CAJ/B;AAAA,MAIZU,aAJY;AAAA,MAIGC,gBAJH;;AAAA,mBAKKX,QAAQ,CAAC,KAAD,CALb;AAAA,MAKZY,IALY;AAAA,MAKNC,OALM;;AAAA,mBAMuBb,QAAQ,CAAC,KAAD,CAN/B;AAAA,MAMZc,aANY;AAAA,MAMGC,gBANH;;AAAA,mBAOef,QAAQ,CAAC,KAAD,CAPvB;AAAA,MAOZgB,SAPY;AAAA,MAODC,YAPC,kBASnB;;;AACA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAsB;AAAA;;AAAA,QAArBC,SAAqB,uEAAT,IAAS;;AAAA,qBACbnB,QAAQ,CAACmB,SAAD,CADK;AAAA,QAC9BC,KAD8B;AAAA,QACvBC,MADuB;;AAErC,QAAMC,OAAO,GAAGrB,WAAW,CAAC,UAAAsB,CAAC,EAAI;AAC/BF,MAAAA,MAAM,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAN;AACD,KAF0B,EAExB,EAFwB,CAA3B;AAGA,WAAO,CAACA,KAAD,EAAQE,OAAR,CAAP;AACD,GAND;;AAVmB,KAUbJ,QAVa;;AAAA,kBAkBMA,QAAQ,CAAC,EAAD,CAlBd;AAAA;AAAA,MAkBZX,EAlBY;AAAA,MAkBRC,UAlBQ;;AAAA,mBAmBkBU,QAAQ,CAAC,EAAD,CAnB1B;AAAA;AAAA,MAmBZO,QAnBY;AAAA,MAmBFC,gBAnBE;;AAAA,mBAoBkBR,QAAQ,CAAC,EAAD,CApB1B;AAAA;AAAA,MAoBZS,QApBY;AAAA,MAoBFC,gBApBE;;AAsBnB,MAAMC,QAAQ,GAAG5B,WAAW,CAC1B,UAAAsB,CAAC,EAAI;AACHA,IAAAA,CAAC,CAACO,cAAF;;AACA,QAAIH,QAAQ,KAAKjB,aAAjB,EAAgC;AAC9B,aAAOK,gBAAgB,CAAC,IAAD,CAAvB;AACD;;AACD,QAAI,CAACH,IAAL,EAAW;AACT,aAAOK,YAAY,CAAC,IAAD,CAAnB;AACD;;AACDc,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEzB,MAAAA,EAAE,EAAFA,EAAF;AAAMkB,MAAAA,QAAQ,EAARA,QAAN;AAAgBE,MAAAA,QAAQ,EAARA,QAAhB;AAA0BjB,MAAAA,aAAa,EAAbA,aAA1B;AAAyCE,MAAAA,IAAI,EAAJA;AAAzC,KAAZ;AACD,GAVyB,EAW1B,CAACe,QAAD,EAAWjB,aAAX,EAA0BE,IAA1B,CAX0B,CAA5B,CAtBmB,CAmCnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMqB,qBAAqB,GAAGhC,WAAW,CACvC,UAAAsB,CAAC,EAAI;AACHR,IAAAA,gBAAgB,CAACQ,CAAC,CAACC,MAAF,CAASJ,KAAT,KAAmBO,QAApB,CAAhB;AACAhB,IAAAA,gBAAgB,CAACY,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAhB;AACD,GAJsC,EAKvC,CAACO,QAAD,CALuC,CAAzC;AAQA,MAAMO,YAAY,GAAGjC,WAAW,CAAC,UAAAsB,CAAC,EAAI;AACpCN,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAJ,IAAAA,OAAO,CAACU,CAAC,CAACC,MAAF,CAASW,OAAV,CAAP;AACD,GAH+B,EAG7B,EAH6B,CAAhC;AAKA,SACE,4BACE,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEN,QAAhB;AAA0B,IAAA,KAAK,EAAE;AAAEO,MAAAA,OAAO,EAAE;AAAX,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,MAAC,KAAD;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,KAAK,EAAEX,QAFT;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,QAAQ,EAAEC,gBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CARF,EAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,MAAC,KAAD;AACE,IAAA,IAAI,EAAC,eADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAEC,QAHT;AAIE,IAAA,QAAQ,MAJV;AAKE,IAAA,QAAQ,EAAEC,gBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAlBF,EA6BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,MAAC,KAAD;AACE,IAAA,IAAI,EAAC,qBADP;AAEE,IAAA,KAAK,EAAElB,aAFT;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,QAAQ,MAJV;AAKE,IAAA,QAAQ,EAAEuB,qBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAUGnB,aAAa,IACZ;AAAK,IAAA,KAAK,EAAE;AAAEuB,MAAAA,KAAK,EAAE;AAAT,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yFAXJ,CA7BF,EA2CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,IAAI,EAAC,WAAf;AAA2B,IAAA,IAAI,EAAEzB,IAAjC;AAAuC,IAAA,QAAQ,EAAEsB,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mFADF,EAIGlB,SAAS,IACR;AAAK,IAAA,KAAK,EAAE;AAAEqB,MAAAA,KAAK,EAAE;AAAT,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6EALJ,CA3CF,EAmDE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,CAnDF,6BADF,CADF;AA+DD,CAzHD;;IAAM7B,M;;MAAAA,M;AA2HN,eAAeA,MAAf","sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport { Form, Input, Checkbox, Button } from \"antd\";\r\n\r\nconst TextInput = () =>{\r\n  return <Input name=\"user-id\" value={id} required onChange={onChangeId} />;\r\n}\r\n\r\nconst Signup = () => {\r\n  // const [id, setId] = useState(\"\");\r\n  // const [nickName, setNickname] = useState(\"\");\r\n  // const [password, setPassword] = useState(\"\");\r\n  const [passwordCheck, setPasswordCheck] = useState(\"\");\r\n  const [term, setTerm] = useState(false);\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  const [termError, setTermError] = useState(false);\r\n\r\n  // custom hooks\r\n  const useInput = (initValue = null) => {\r\n    const [value, setter] = useState(initValue);\r\n    const handler = useCallback(e => {\r\n      setter(e.target.value);\r\n    }, []);\r\n    return [value, handler];\r\n  };\r\n\r\n  const [id, onChangeId] = useInput(\"\");\r\n  const [nickname, onChangeNickname] = useInput(\"\");\r\n  const [password, onChangePassword] = useInput(\"\");\r\n\r\n  const onSubmit = useCallback(\r\n    e => {\r\n      e.preventDefault();\r\n      if (password !== passwordCheck) {\r\n        return setPasswordError(true);\r\n      }\r\n      if (!term) {\r\n        return setTermError(true);\r\n      }\r\n      console.log({ id, nickname, password, passwordCheck, term });\r\n    },\r\n    [password, passwordCheck, term]\r\n  );\r\n  // const onChangeId = e => {          << custom hook으로 줄인 내용\r\n  //   setId(e.target.value);\r\n  // };\r\n  // const onChangeNickname = e => {\r\n  //   setNickname(e.target.value);\r\n  // };\r\n  // const onChangePassword = e => {\r\n  //   setPassword(e.target.value);\r\n  // };\r\n\r\n  const onChangePasswordCheck = useCallback(\r\n    e => {\r\n      setPasswordError(e.target.value !== password);\r\n      setPasswordCheck(e.target.value);\r\n    },\r\n    [password]\r\n  );\r\n\r\n  const onChangeTerm = useCallback(e => {\r\n    setTermError(false);\r\n    setTerm(e.target.checked);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={onSubmit} style={{ padding: 10 }}>\r\n        <div>\r\n          <label htmlFor=\"user-id\">아이디</label>\r\n          <br />\r\n          {/* 앞에 required는 필수값 입력 */}\r\n          {/* <Input name=\"user-id\" value={id} required onChange={onChangeId} /> */}\r\n          {/* 인풋 -> value, onChange 짝이 되어야 함 */}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"user-nick\">닉네임</label>\r\n          <br />\r\n          <Input\r\n            name=\"user-nick\"\r\n            value={nickname}\r\n            required\r\n            onChange={onChangeNickname}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"user-password\">비밀번호</label>\r\n          <br />\r\n          <Input\r\n            name=\"user-password\"\r\n            type=\"password\"\r\n            value={password}\r\n            required\r\n            onChange={onChangePassword}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"user-password-check\">비밀번호체크</label>\r\n          <br />\r\n          <Input\r\n            name=\"user-password-check\"\r\n            value={passwordCheck}\r\n            type=\"password\"\r\n            required\r\n            onChange={onChangePasswordCheck}\r\n          />\r\n          {passwordError && (\r\n            <div style={{ color: \"red\" }}>비밀번호가 일치하지 않습니다.</div>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <Checkbox name=\"user-term\" vale={term} onChange={onChangeTerm}>\r\n            이용약관 내용에 동의합니다.\r\n          </Checkbox>\r\n          {termError && (\r\n            <div style={{ color: \"red\" }}>약관에 동의하셔야 합니다.</div>\r\n          )}\r\n        </div>\r\n        <div style={{ marginTop: 10 }}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            가입하기\r\n          </Button>\r\n          {/* 원래 버튼 타입은 submit이지만 antd의 특성 */}\r\n        </div>\r\n        회원가입\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n"]},"metadata":{},"sourceType":"module"}