{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// 초기값(추후 dummy값을 이쪽으로 옮겨야 함)\nvar dummyUser = {\n  nickname: \"제로초\",\n  Post: [],\n  Followings: [],\n  Followers: [],\n  signUpData: {}\n};\nexport var initialState = {\n  isLoggedIn: false,\n  user: null,\n  signUpData: {},\n  loginData: {}\n}; //action명\n\nexport var SIGN_UP = \"SIGN_UP\";\nexport var SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\nexport var LOG_IN = \"LOG_IN\";\nexport var LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\nexport var LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\nexport var LOG_OUT = \"LOG_OUT\"; //action 정의\n\nexport var signUpSuccess = {\n  type: SIGN_UP_SUCCESS\n};\nexport var loginAction = {\n  type: LOG_IN\n};\nexport var logoutAction = {\n  type: LOG_OUT\n}; // 동적데이터는 함수를 통해 넣어야 함\n\nexport var signUpAction = function signUpAction(data) {\n  return {\n    type: SIGN_UP,\n    data: data\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOG_IN:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggedIn: true,\n          user: dummyUser\n        });\n      }\n\n    case LOG_OUT:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggedIn: false,\n          user: null\n        });\n      }\n\n    case SIGN_UP:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          signUpData: action.data\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/arthu/Documents/react-nodebird/front/reducers/user.js"],"names":["dummyUser","nickname","Post","Followings","Followers","signUpData","initialState","isLoggedIn","user","loginData","SIGN_UP","SIGN_UP_SUCCESS","LOG_IN","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT","signUpSuccess","type","loginAction","logoutAction","signUpAction","data","reducer","state","action"],"mappings":";;;;;;AAAA;AACA,IAAMA,SAAS,GAAG;AAChBC,EAAAA,QAAQ,EAAE,KADM;AAEhBC,EAAAA,IAAI,EAAE,EAFU;AAGhBC,EAAAA,UAAU,EAAE,EAHI;AAIhBC,EAAAA,SAAS,EAAE,EAJK;AAKhBC,EAAAA,UAAU,EAAE;AALI,CAAlB;AAQA,OAAO,IAAMC,YAAY,GAAG;AAC1BC,EAAAA,UAAU,EAAE,KADc;AAE1BC,EAAAA,IAAI,EAAE,IAFoB;AAG1BH,EAAAA,UAAU,EAAE,EAHc;AAI1BI,EAAAA,SAAS,EAAE;AAJe,CAArB,C,CAOP;;AACA,OAAO,IAAMC,OAAO,GAAG,SAAhB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,MAAM,GAAG,QAAf;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,OAAO,GAAG,SAAhB,C,CAEP;;AAGA,OAAO,IAAMC,aAAa,GAAG;AAC3BC,EAAAA,IAAI,EAAEN;AADqB,CAAtB;AAIP,OAAO,IAAMO,WAAW,GAAG;AACzBD,EAAAA,IAAI,EAAEL;AADmB,CAApB;AAIP,OAAO,IAAMO,YAAY,GAAG;AAC1BF,EAAAA,IAAI,EAAEF;AADoB,CAArB,C,CAIP;;AACA,OAAO,IAAMK,YAAY,GAAG,SAAfA,YAAe,CAAAC,IAAI,EAAI;AAClC,SAAO;AACLJ,IAAAA,IAAI,EAAEP,OADD;AAELW,IAAAA,IAAI,EAAEA;AAFD,GAAP;AAID,CALM;;AAOP,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBjB,YAAyB;AAAA,MAAXkB,MAAW;;AAChD,UAAQA,MAAM,CAACP,IAAf;AACE,SAAKL,MAAL;AAAa;AACX,+CACKW,KADL;AAEEhB,UAAAA,UAAU,EAAE,IAFd;AAGEC,UAAAA,IAAI,EAAER;AAHR;AAKD;;AACD,SAAKe,OAAL;AAAc;AACZ,+CACKQ,KADL;AAEEhB,UAAAA,UAAU,EAAE,KAFd;AAGEC,UAAAA,IAAI,EAAE;AAHR;AAKD;;AACD,SAAKE,OAAL;AAAc;AACZ,+CACKa,KADL;AAEElB,UAAAA,UAAU,EAAEmB,MAAM,CAACH;AAFrB;AAID;;AACD;AAAS;AACP,iCACKE,KADL;AAGD;AAzBH;AA2BD,CA5BD;;AA8BA,eAAeD,OAAf","sourcesContent":["// 초기값(추후 dummy값을 이쪽으로 옮겨야 함)\r\nconst dummyUser = {\r\n  nickname: \"제로초\",\r\n  Post: [],\r\n  Followings: [],\r\n  Followers: [],\r\n  signUpData: {},\r\n};\r\n\r\nexport const initialState = {\r\n  isLoggedIn: false,\r\n  user: null,\r\n  signUpData: {},\r\n  loginData: {},\r\n};\r\n\r\n//action명\r\nexport const SIGN_UP = \"SIGN_UP\";\r\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\r\nexport const LOG_IN = \"LOG_IN\";\r\nexport const LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\r\nexport const LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\r\nexport const LOG_OUT = \"LOG_OUT\";\r\n\r\n//action 정의\r\n\r\n\r\nexport const signUpSuccess = {\r\n  type: SIGN_UP_SUCCESS,\r\n};\r\n\r\nexport const loginAction = {\r\n  type: LOG_IN,\r\n};\r\n\r\nexport const logoutAction = {\r\n  type: LOG_OUT,\r\n};\r\n\r\n// 동적데이터는 함수를 통해 넣어야 함\r\nexport const signUpAction = data => {\r\n  return {\r\n    type: SIGN_UP,\r\n    data: data,\r\n  };\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOG_IN: {\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        user: dummyUser,\r\n      };\r\n    }\r\n    case LOG_OUT: {\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n      };\r\n    }\r\n    case SIGN_UP: {\r\n      return {\r\n        ...state,\r\n        signUpData: action.data,\r\n      };\r\n    }\r\n    default: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}